{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","setInterval","this","date","Date","console","log","toLocaleTimeString","setState","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","Visible","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"iPAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,IAAME,EAAa,IAAIC,KAGvBC,QAAQC,IAAIH,EAAKI,sBAEjB,EAAKC,SAAS,CAAET,KAAMI,EAAKI,yBAC1B,OAfP,gCAkBE,SAAmBE,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQC,IAAR,4CACEG,EAAUC,KADZ,eACuBR,KAAKS,MAAMD,SAtBxC,kCA0BE,WACEE,cAAcV,KAAKF,WA3BvB,oBA8BE,WACE,OACE,sBAAMa,UAAU,OAAhB,SACGX,KAAKJ,MAAMC,WAjCpB,GAA2Be,IAAMC,WCP3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,QAAU,WACR,EAAKX,SAAS,CACZS,gBAAgB,K,4CAIpB,WAAU,IAAD,OACP,OACE,sBAAKJ,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,wBACEO,KAAK,SACLP,UAAU,+BACVQ,QAASnB,KAAKiB,QAHhB,wBAOA,sBAAKN,UAAU,YAAf,0BAEGX,KAAKJ,MAAMmB,eACR,cAAC,EAAD,CAAOP,KAAMR,KAAKJ,MAAMoB,YAExB,sBAAML,UAAU,kBAAhB,sCAEN,wBACEO,KAAK,SACLP,UAAU,+BACVQ,QAAS,kBAAO,EAAKb,SAAS,CAAES,gBAAgB,KAHlD,wBAQA,wBACEG,KAAK,SACLP,UAAU,+BACVQ,QAAS,kBAAM,EAAKb,SAAS,CAC3BU,UACCI,KAAKC,MAAsB,IAAhBD,KAAKE,aALrB,oC,GAtCUV,IAAMC,WAqDTC,ICtDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfb3e697.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: '',\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n\n      this.setState({ time: date.toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from\n      ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <span className=\"Time\">\n        {this.state.time}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  Visible = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <button\n          type=\"button\"\n          className=\"App__button-show App__button\"\n          onClick={this.Visible}\n        >\n          Show Clock\n        </button>\n        <div className=\"App__text\">\n          Current time:\n          {this.state.isClockVisible\n            ? <Clock name={this.state.clockName} />\n            // eslint-disable-next-line react/no-unescaped-entities\n            : <span className=\"App__text-green\"> \"click upper button\"</span>}\n        </div>\n        <button\n          type=\"button\"\n          className=\"App__button-hide App__button\"\n          onClick={() => (this.setState({ isClockVisible: false }))}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button-name App__button\"\n          onClick={() => this.setState({\n            clockName:\n             Math.round(Math.random() * 100),\n          })}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}